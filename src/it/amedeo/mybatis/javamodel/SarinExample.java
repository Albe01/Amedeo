package it.amedeo.mybatis.javamodel;

import java.util.ArrayList;
import java.util.List;

public class SarinExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sarin
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sarin
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sarin
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public SarinExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sarin
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table sarin
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andTipoparolaIsNull() {
			addCriterion("tipoparola is null");
			return (Criteria) this;
		}

		public Criteria andTipoparolaIsNotNull() {
			addCriterion("tipoparola is not null");
			return (Criteria) this;
		}

		public Criteria andTipoparolaEqualTo(String value) {
			addCriterion("tipoparola =", value, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaNotEqualTo(String value) {
			addCriterion("tipoparola <>", value, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaGreaterThan(String value) {
			addCriterion("tipoparola >", value, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaGreaterThanOrEqualTo(String value) {
			addCriterion("tipoparola >=", value, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaLessThan(String value) {
			addCriterion("tipoparola <", value, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaLessThanOrEqualTo(String value) {
			addCriterion("tipoparola <=", value, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaLike(String value) {
			addCriterion("tipoparola like", value, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaNotLike(String value) {
			addCriterion("tipoparola not like", value, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaIn(List<String> values) {
			addCriterion("tipoparola in", values, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaNotIn(List<String> values) {
			addCriterion("tipoparola not in", values, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaBetween(String value1, String value2) {
			addCriterion("tipoparola between", value1, value2, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andTipoparolaNotBetween(String value1, String value2) {
			addCriterion("tipoparola not between", value1, value2, "tipoparola");
			return (Criteria) this;
		}

		public Criteria andParolaIsNull() {
			addCriterion("parola is null");
			return (Criteria) this;
		}

		public Criteria andParolaIsNotNull() {
			addCriterion("parola is not null");
			return (Criteria) this;
		}

		public Criteria andParolaEqualTo(String value) {
			addCriterion("parola =", value, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaNotEqualTo(String value) {
			addCriterion("parola <>", value, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaGreaterThan(String value) {
			addCriterion("parola >", value, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaGreaterThanOrEqualTo(String value) {
			addCriterion("parola >=", value, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaLessThan(String value) {
			addCriterion("parola <", value, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaLessThanOrEqualTo(String value) {
			addCriterion("parola <=", value, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaLike(String value) {
			addCriterion("parola like", value, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaNotLike(String value) {
			addCriterion("parola not like", value, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaIn(List<String> values) {
			addCriterion("parola in", values, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaNotIn(List<String> values) {
			addCriterion("parola not in", values, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaBetween(String value1, String value2) {
			addCriterion("parola between", value1, value2, "parola");
			return (Criteria) this;
		}

		public Criteria andParolaNotBetween(String value1, String value2) {
			addCriterion("parola not between", value1, value2, "parola");
			return (Criteria) this;
		}

		public Criteria andRegioneIsNull() {
			addCriterion("regione is null");
			return (Criteria) this;
		}

		public Criteria andRegioneIsNotNull() {
			addCriterion("regione is not null");
			return (Criteria) this;
		}

		public Criteria andRegioneEqualTo(String value) {
			addCriterion("regione =", value, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneNotEqualTo(String value) {
			addCriterion("regione <>", value, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneGreaterThan(String value) {
			addCriterion("regione >", value, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneGreaterThanOrEqualTo(String value) {
			addCriterion("regione >=", value, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneLessThan(String value) {
			addCriterion("regione <", value, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneLessThanOrEqualTo(String value) {
			addCriterion("regione <=", value, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneLike(String value) {
			addCriterion("regione like", value, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneNotLike(String value) {
			addCriterion("regione not like", value, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneIn(List<String> values) {
			addCriterion("regione in", values, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneNotIn(List<String> values) {
			addCriterion("regione not in", values, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneBetween(String value1, String value2) {
			addCriterion("regione between", value1, value2, "regione");
			return (Criteria) this;
		}

		public Criteria andRegioneNotBetween(String value1, String value2) {
			addCriterion("regione not between", value1, value2, "regione");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeIsNull() {
			addCriterion("ricorrenze is null");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeIsNotNull() {
			addCriterion("ricorrenze is not null");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeEqualTo(Integer value) {
			addCriterion("ricorrenze =", value, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeNotEqualTo(Integer value) {
			addCriterion("ricorrenze <>", value, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeGreaterThan(Integer value) {
			addCriterion("ricorrenze >", value, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeGreaterThanOrEqualTo(Integer value) {
			addCriterion("ricorrenze >=", value, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeLessThan(Integer value) {
			addCriterion("ricorrenze <", value, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeLessThanOrEqualTo(Integer value) {
			addCriterion("ricorrenze <=", value, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeIn(List<Integer> values) {
			addCriterion("ricorrenze in", values, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeNotIn(List<Integer> values) {
			addCriterion("ricorrenze not in", values, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeBetween(Integer value1, Integer value2) {
			addCriterion("ricorrenze between", value1, value2, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andRicorrenzeNotBetween(Integer value1, Integer value2) {
			addCriterion("ricorrenze not between", value1, value2, "ricorrenze");
			return (Criteria) this;
		}

		public Criteria andPuntaprIsNull() {
			addCriterion("puntapr is null");
			return (Criteria) this;
		}

		public Criteria andPuntaprIsNotNull() {
			addCriterion("puntapr is not null");
			return (Criteria) this;
		}

		public Criteria andPuntaprEqualTo(Integer value) {
			addCriterion("puntapr =", value, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprNotEqualTo(Integer value) {
			addCriterion("puntapr <>", value, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprGreaterThan(Integer value) {
			addCriterion("puntapr >", value, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprGreaterThanOrEqualTo(Integer value) {
			addCriterion("puntapr >=", value, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprLessThan(Integer value) {
			addCriterion("puntapr <", value, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprLessThanOrEqualTo(Integer value) {
			addCriterion("puntapr <=", value, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprIn(List<Integer> values) {
			addCriterion("puntapr in", values, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprNotIn(List<Integer> values) {
			addCriterion("puntapr not in", values, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprBetween(Integer value1, Integer value2) {
			addCriterion("puntapr between", value1, value2, "puntapr");
			return (Criteria) this;
		}

		public Criteria andPuntaprNotBetween(Integer value1, Integer value2) {
			addCriterion("puntapr not between", value1, value2, "puntapr");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table sarin
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sarin
     *
     * @mbggenerated do_not_delete_during_merge Mon Feb 18 16:23:50 CET 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}